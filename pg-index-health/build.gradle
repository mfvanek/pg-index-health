description = 'pg-index-health is a Java library for analyzing and maintaining indexes health in PostgreSQL databases.'

dependencies {
    api project(':pg-index-health-model')
    api project(':pg-index-health-jdbc-connection')
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    testImplementation project(':pg-index-health-testing')
    testImplementation(testFixtures(project(":pg-index-health-model")))
    testImplementation(testFixtures(project(":pg-index-health-jdbc-connection")))
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.awaitility:awaitility:${awaitilityVersion}"
    testImplementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    testImplementation "org.postgresql:postgresql:${postgresqlVersion}"
}

test {
    testLogging.showStandardStreams = false // set to true for debug purposes
    useJUnitPlatform() {
        excludeTags 'cluster'
    }
    dependsOn checkstyleMain, checkstyleTest, pmdMain, pmdTest, spotbugsMain, spotbugsTest
    maxParallelForks = customMaxParallelForks
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

tasks.register('clusterTest', Test) {
    description = 'Runs tests on PostgreSQL cluster.'
    group = 'verification'
    useJUnitPlatform() {
        includeTags 'cluster'
    }
    maxParallelForks = 1 // important!
    mustRunAfter test
}

build.dependsOn clusterTest
